/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.BanBLL;
import BLL.ChiTietHoaDonBLL;
import BLL.HoaDonBLL;
import BLL.LoaiBLL;
import BLL.TaiKhoanBLL;
import BLL.ThucUongBLL;
import DAL.HoaDonDAL;
import DAL.TaiKhoanDAL;
import DTO.BanDTO;
import DTO.ChiTietHoaDonDTO;
import DTO.HoaDonDTO;
import DTO.LoaiDTO;
import DTO.TaiKhoanDTO;
import DTO.ThucUongDTO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author huyng
 */
public class ChiTietHoaDonGUI extends javax.swing.JPanel {

    /**
     * Creates new form TaiKhoanGUI
     */
    public ChiTietHoaDonGUI() {
        initComponents();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnInHoaDon = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CHI TIẾT HÓA ĐƠN");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("LỊCH SỬ HÓA ĐƠN");

        btnInHoaDon.setText("In hóa đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInHoaDon)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(502, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        model.addColumn("Mã hóa đơn");
        model.addColumn("Thời gian vào");
        model.addColumn("Thời gian ra");
        model.addColumn("Bàn");
        model.addColumn("Trạng thái");
        model.addColumn("Tổng tiền");
        List<HoaDonDTO> ds = HoaDonBLL.layDanhSachHoaDon();

        for (HoaDonDTO hoaDon : ds) {
            Object[] rowData = {hoaDon.getMaHoaDon(), hoaDon.getThoiGianVao(), hoaDon.getThoiGianRa(), BanBLL.timBanTheoMa(hoaDon.getMaBan()).getTenBan(), hoaDon.isTrangThai() == true ? "Đã thanh toán" : "Chưa thánh toán", HoaDonBLL.tinhTongTienHoaDon(hoaDon.getMaHoaDon())};
            model.addRow(rowData);
        }

    }

    private void loadDataToTableCT(int maHD) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        model.addColumn("ID");
        model.addColumn("Thức uống");
        model.addColumn("Số lượng");
        model.addColumn("Đơn giá");
        model.addColumn("Thành tiền");
        List<ChiTietHoaDonDTO> ds = ChiTietHoaDonBLL.layDanhSachChiTietHoaDonTheoMaHoaDon(maHD);

        for (ChiTietHoaDonDTO chiTietHoaDon : ds) {
            long thanhTien = chiTietHoaDon.getSoLuong() * ThucUongBLL.timThucUongTheoMa(chiTietHoaDon.getMaThucUong()).getGia();
            Object[] rowData = {chiTietHoaDon.getId(), ThucUongBLL.timThucUongTheoMa(chiTietHoaDon.getMaThucUong()).getTenThucUong(), chiTietHoaDon.getSoLuong(), ThucUongBLL.timThucUongTheoMa(chiTietHoaDon.getMaThucUong()).getGia(), thanhTien};
            model.addRow(rowData);
        }

    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            String maHoaDon = jTable1.getValueAt(selectedRow, 0).toString();
            loadDataToTableCT(Integer.parseInt(maHoaDon));

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
if (selectedRow >= 0) {
    JFileChooser fileChooser = new JFileChooser();
    int userChoice = fileChooser.showSaveDialog(this); // "this" là frame hoặc cửa sổ chứa nút hoặc sự kiện này.

    if (userChoice == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        String filePath = selectedFile.getAbsolutePath();
        if (!filePath.toLowerCase().endsWith(".xlsx")) {
            filePath += ".xlsx";
        }

        try {
            Workbook workbook = new XSSFWorkbook(); // Tạo một tệp Excel

            // Tạo một trang tính trong tệp Excel
            Sheet sheet = workbook.createSheet("InHoaDon");

            // Tạo dòng đầu tiên (tiêu đề) trong trang tính
            Row headerRow = sheet.createRow(0);

            // Tạo các ô tiêu đề cho hóa đơn
            headerRow.createCell(0).setCellValue("Mã hóa đơn");
            headerRow.createCell(1).setCellValue("Thời gian vào");
            headerRow.createCell(2).setCellValue("Thời gian ra");
            headerRow.createCell(3).setCellValue("Bàn");
            headerRow.createCell(4).setCellValue("Tổng tiền");

            // Lấy dữ liệu từ jTable1 và đưa vào tệp Excel
            String maHoaDon = jTable1.getValueAt(selectedRow, 0).toString();
            String thoiGianVao = jTable1.getValueAt(selectedRow, 1).toString();
            String thoiGianRa = jTable1.getValueAt(selectedRow, 2).toString();
            String ban = jTable1.getValueAt(selectedRow, 3).toString();
            String tongTien = jTable1.getValueAt(selectedRow, 5).toString();
            Row dataRow = sheet.createRow(1);
            dataRow.createCell(0).setCellValue(maHoaDon);
            dataRow.createCell(1).setCellValue(thoiGianVao);
            dataRow.createCell(2).setCellValue(thoiGianRa);
            dataRow.createCell(3).setCellValue(ban);
            dataRow.createCell(4).setCellValue(tongTien);

            // Tạo các ô tiêu đề cho chi tiết hóa đơn
            Row headerRow2 = sheet.createRow(3);
            headerRow2.createCell(0).setCellValue("Thức uống");
            headerRow2.createCell(1).setCellValue("Số lượng");
            headerRow2.createCell(2).setCellValue("Đơn giá");
            headerRow2.createCell(3).setCellValue("Thành tiền");

            // Lấy dữ liệu từ jTable2 và đưa vào tệp Excel
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            int rowIndex = 4;
            for (int i = 0; i < model.getRowCount(); i++) {
                String thucUong = model.getValueAt(i, 1).toString();
                String soLuong = model.getValueAt(i, 2).toString();
                String donGIa = model.getValueAt(i, 3).toString();
                String thanhTien = model.getValueAt(i, 4).toString();

                Row dataRow2 = sheet.createRow(rowIndex);
                dataRow2.createCell(0).setCellValue(thucUong);
                dataRow2.createCell(1).setCellValue(soLuong);
                dataRow2.createCell(2).setCellValue(donGIa);
                dataRow2.createCell(3).setCellValue(thanhTien);
                rowIndex++;
            }

            FileOutputStream fileOut = new FileOutputStream(filePath);
            workbook.write(fileOut);
            fileOut.close();

            // Mở tệp Excel sau khi đã ghi
            Desktop.getDesktop().open(selectedFile);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

    }//GEN-LAST:event_btnInHoaDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
